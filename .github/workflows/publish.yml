name: Publish

on:
  push:
    tags:
      - "*"
    branches:
      - master
  pull_request:

jobs:
  create-assets:
    name: release ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        target:
          - x86_64-pc-windows-msvc
          - i686-pc-windows-msvc
          - x86_64-unknown-linux-musl
          - x86_64-apple-darwin
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            archive: zip
          - os: windows-latest
            target: i686-pc-windows-msvc
            archive: zip
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            archive: zip
          - os: macos-latest
            target: x86_64-apple-darwin
            archive: zip
    steps:
      - uses: actions/checkout@master
      - name: Compile and release
        uses: rust-build/rust-build.action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          RUSTTARGET: ${{ matrix.target }}
          EXTRA_FILES: "README.md"
          SRC_DIR: "hello"
          ARCHIVE_TYPES: ${{ matrix.archive }}
          PRE_BUILD: "pre_build.sh"
          POST_BUILD: "test/post_build.sh"
          MINIFY: "yes"
#       - uses: actions-rs/toolchain@v1
#         with:
#           profile: minimal
#           toolchain: stable-${{ matrix.target }}
#           target: ${{ matrix.target }}
#           default: true
#           override: true
#       - uses: actions-rs/cargo@v1
#         with:
#           command: build
#           args: --release
#       - uses: actions/upload-release-asset@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           upload_url: ${{ steps.get_release_info.outputs.upload_url }}
#           asset_path: ${{ matrix.asset_path }}
#           asset_name: ${{ matrix.asset_name }}
#           asset_content_type: application/octet-stream
